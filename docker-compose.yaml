version: "3"

services:
    web_api:
        profiles: [web_api]
        container_name: amdb_backend.web_api
        depends_on: [postgres, redis]
        ports: ["${UVICORN_HOST}:${UVICORN_PORT}:${UVICORN_PORT}"]
        restart: unless-stopped

        build:
            context: ./
            dockerfile: ./Dockerfile
            target: web_api
        networks:
            - amdb_backend.postgres.network
            - amdb_backend.redis.network
        environment:
            - DATABASE_PG_USER=${DATABASE_PG_USER}
            - DATABASE_PG_PASSWORD=${DATABASE_PG_PASSWORD}
            - DATABASE_PG_NAME=${DATABASE_PG_NAME}
            - DATABASE_PG_HOST=${DATABASE_PG_HOST}
            - DATABASE_PG_PORT=${DATABASE_PG_PORT}

            - FASTAPI_TITLE=${FASTAPI_TITLE}
            - FASTAPI_SUMMARY=${FASTAPI_SUMMARY}
            - FASTAPI_DESCRIPTION=${FASTAPI_DESCRIPTION}
            - FASTAPI_VERSION=${FASTAPI_VERSION}

            - UVICORN_HOST=0.0.0.0
            - UVICORN_PORT=${UVICORN_PORT}

            - SESSION_IDENTITY_PROVIDER_REDIS_HOST=${SESSION_IDENTITY_PROVIDER_REDIS_HOST}
            - SESSION_IDENTITY_PROVIDER_REDIS_PORT=${SESSION_IDENTITY_PROVIDER_REDIS_PORT}
            - SESSION_IDENTITY_PROVIDER_REDIS_DB=${SESSION_IDENTITY_PROVIDER_REDIS_DB}
            - SESSION_IDENTITY_PROVIDER_REDIS_PASSWORD=${SESSION_IDENTITY_PROVIDER_REDIS_PASSWORD}
            - SESSION_IDENTITY_PROVIDER_SESSION_LIFETIME=${SESSION_IDENTITY_PROVIDER_SESSION_LIFETIME}

    postgres:
        profiles: [web_api, postgres_migration]
        container_name: amdb_backend.postgres
        image: postgres:15-alpine
        restart: unless-stopped

        networks:
            - amdb_backend.postgres.network
        environment:
            - POSTGRES_USER=${DATABASE_PG_USER}
            - POSTGRES_PASSWORD=${DATABASE_PG_PASSWORD}
            - POSTGRES_DB=${DATABASE_PG_NAME}

    redis:
        profiles: [web_api]
        container_name: amdb_backend.redis
        image: redis:7.2-alpine
        restart: unless-stopped

        networks:
            - amdb_backend.redis.network
        environment:
            - REDIS_PASSWORD=${SESSION_IDENTITY_PROVIDER_REDIS_PASSWORD}

networks:
    amdb_backend.postgres.network: {}
    amdb_backend.redis.network: {}

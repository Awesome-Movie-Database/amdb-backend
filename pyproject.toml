[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "amdb"
description = "Awesome Movie Database Backend"
license = "Apache-2.0"
readme = "README.md"
dynamic = ["version"]
requires-python = "==3.10.13"

authors = [
    { name = "madnoberson", email = "baseddepartmentzx77@gmail.com" },
]
maintainers = [
    { name = "madnoberson", email = "baseddepartmentzx77@gmail.com" },
]
dependencies = [
    "sqlalchemy==2.0.23",
    "psycopg2-binary==2.9.9",
]


[tool.hatch.envs.style]
description = "Lint and format"
detached = true

dependencies = [
    "mypy==1.8.0",
    "ruff==0.1.9",
]

[tool.hatch.envs.style.scripts]
lint = "./scripts/lint.sh"
format = "./scripts/format.sh"


[tool.hatch.envs.web_api]
description = "Web API"

dependencies = [
    "redis>=5.0.0",
    "fastapi==0.103.*",
    "uvicorn==0.22.*",
]


[tool.hatch.envs.test]
description = "Testing"

dependencies = [
    "coverage[toml]>=6.5",
    "pytest",
]

[tool.hatch.envs.test.scripts]
test = "./scripts/test.sh"
test-cov = "./scripts/test-cov.sh"


[tool.hatch.envs.dev]
description = "Development"

dependencies = [
    "mypy==1.8.0",
    "ruff==0.1.9",
    "coverage[toml]>=6.5",
    "pytest",
    "pre-commit==3.5.0",
]

[tool.hatch.envs.dev.scripts]
lint = "./scripts/lint.sh"
format = "./scripts/format.sh"
test = "./scripts/test.sh"
test-cov = "./scripts/test-cov.sh"


[tool.hatch.version]
path = "src/amdb/__about__.py"

[tool.ruff.lint]
extend-select = [
    "N",        # https://docs.astral.sh/ruff/settings/#pep8-naming
    "EM",       # https://docs.astral.sh/ruff/settings/#flake8-errmsg
    "ISC",      # https://docs.astral.sh/ruff/settings/#flake8-implicit-str-concat
    "G",        # https://docs.astral.sh/ruff/rules/#flake8-logging-format-g
    "Q",        # https://docs.astral.sh/ruff/rules/#flake8-pytest-style-pt
]
select = [
    "F401",     # unused-import
    "F406",     # undefined-local-with-nested-import-star-usage
    "COM812",   # missing-trailing-comma
    "DTZ003",   # call-datetime-utcnow
    "EM102",    # f-string-in-exception
    "INP001",   # implicit-namespace-package
    "PIE794",   # duplicate-class-field-definition
    "PIE796",   # non-unique-enums
    "T201",     # print
    "SLF001",   # private-member-access
]

[tool.pytest.ini_options]
pythonpath = "src/"

[tool.ruff]
line-length = 99

[tool.ruff.format]
quote-style = "double"

[tool.coverage.run]
source_pkgs = ["amdb", "tests"]
branch = true
parallel = true

[tool.coverage.paths]
amdb = ["src/amdb", "*/src/amdb"]
tests = ["tests", "*/tests"]

[tool.coverage.report]
exclude_lines = [
    "no cov",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
